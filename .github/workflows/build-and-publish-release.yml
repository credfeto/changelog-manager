name: .NET Core [Release]

on:
  push:
     branches:
       - 'release/*'
       - 'hotfix/*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.3
      with:
        fetch-depth: 0
    - name: Fetch tags and master
      run: |
        git fetch --tags
        echo REF: $GITHUB_REF
        echo SHA: $GITHUB_SHA
        echo GIT_BRANCH=$GITHUB_REF >> $GITHUB_ENV
        git branch --remote
    - name: Determine .net core version
      uses: credfeto/action-dotnet-version-detect@v1.1.1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - if: env.DOTNET_VERSION != '5.0.100'
      uses: actions/setup-dotnet@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        dotnet-version: '5.0.100'
    - name: Enable dotnet tools
      run: dotnet new tool-manifest
    - name: Install Build Version Tool
      run: dotnet tool install --local FunFair.BuildVersion --add-source ${{ secrets.FUNFAIR_NUGET_FEED }}
    - name: Install Multi-Push Tool
      run: dotnet tool install --local Credfeto.Package.Push
    - name: Set Define Build Version
      run: dotnet buildversion $GITHUB_RUN_NUMBER
    - name: Build with dotnet
      run: |
        cd src
        dotnet build --configuration Release /p:Version=${{ env.BUILD_VERSION }}
    - name: Pack tool
      run: |
        cd src
        dotnet pack --configuration Release /p:Version=${{ env.BUILD_VERSION }} --no-restore --output ../dist
    - name: Publish
      run: |
        dotnet pushpackages -folder dist --api-key ${{ secrets.NUGET_API_KEY }} --source ${{ secrets.NUGET_FEED }}
    - name: Create Release Notes
      run: |
        dotnet tool install --local Credfeto.ChangeLog.Cmd --version ${{ env.BUILD_VERSION }} --add-source dist
        dotnet changelog -changelog CHANGELOG.md -extract RELEASE_NOTES.md -version ${{ env.BUILD_VERSION }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.BUILD_VERSION }}
        release_name: Release ${{ env.BUILD_VERSION }}
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: false